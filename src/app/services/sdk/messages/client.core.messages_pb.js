/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var chat_core_types_pb = require('./chat.core.types_pb.js');
var chat_api_messages_pb = require('./chat.api.messages_pb.js');
var chat_core_message_medias_pb = require('./chat.core.message.medias_pb.js');
goog.exportSymbol('proto.msg.ClientPendingMessage', null, global);
goog.exportSymbol('proto.msg.ClientSearchResult', null, global);
goog.exportSymbol('proto.msg.ClientSendMessageMedia', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.ClientPendingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.ClientPendingMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.ClientPendingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.ClientPendingMessage.displayName = 'proto.msg.ClientPendingMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.ClientPendingMessage.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.ClientPendingMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.ClientPendingMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.ClientPendingMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientPendingMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    requestid: jspb.Message.getField(msg, 2),
    peerid: jspb.Message.getField(msg, 3),
    peertype: jspb.Message.getField(msg, 4),
    accesshash: jspb.Message.getField(msg, 5),
    createdon: jspb.Message.getField(msg, 6),
    replyto: jspb.Message.getField(msg, 7),
    body: jspb.Message.getField(msg, 8),
    senderid: jspb.Message.getField(msg, 9),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    chat_core_types_pb.MessageEntity.toObject, includeInstance),
    mediatype: jspb.Message.getField(msg, 11),
    media: msg.getMedia_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.ClientPendingMessage}
 */
proto.msg.ClientPendingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.ClientPendingMessage;
  return proto.msg.ClientPendingMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.ClientPendingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.ClientPendingMessage}
 */
proto.msg.ClientPendingMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPeerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeertype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setAccesshash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSenderid(value);
      break;
    case 10:
      var value = new chat_core_types_pb.MessageEntity;
      reader.readMessage(value,chat_core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 11:
      var value = /** @type {!proto.msg.InputMediaType} */ (reader.readEnum());
      msg.setMediatype(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMedia(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.ClientPendingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.ClientPendingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.ClientPendingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientPendingMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFixed64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      chat_core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBytes(
      12,
      f
    );
  }
};


/**
 * required int64 ID = 1;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.msg.ClientPendingMessage.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 RequestID = 2;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getRequestid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setRequestid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.msg.ClientPendingMessage.prototype.clearRequestid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasRequestid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 PeerID = 3;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getPeerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setPeerid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.msg.ClientPendingMessage.prototype.clearPeerid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasPeerid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int32 PeerType = 4;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getPeertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setPeertype = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.msg.ClientPendingMessage.prototype.clearPeertype = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasPeertype = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required fixed64 AccessHash = 5;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getAccesshash = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setAccesshash = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.msg.ClientPendingMessage.prototype.clearAccesshash = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasAccesshash = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int64 CreatedOn = 6;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setCreatedon = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.msg.ClientPendingMessage.prototype.clearCreatedon = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasCreatedon = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int64 ReplyTo = 7;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setReplyto = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.msg.ClientPendingMessage.prototype.clearReplyto = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required string Body = 8;
 * @return {string}
 */
proto.msg.ClientPendingMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.msg.ClientPendingMessage.prototype.setBody = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.msg.ClientPendingMessage.prototype.clearBody = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasBody = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required int64 SenderID = 9;
 * @return {number}
 */
proto.msg.ClientPendingMessage.prototype.getSenderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.msg.ClientPendingMessage.prototype.setSenderid = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.msg.ClientPendingMessage.prototype.clearSenderid = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasSenderid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated MessageEntity Entities = 10;
 * @return {!Array.<!proto.msg.MessageEntity>}
 */
proto.msg.ClientPendingMessage.prototype.getEntitiesList = function() {
  return /** @type{!Array.<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.MessageEntity, 10));
};


/** @param {!Array.<!proto.msg.MessageEntity>} value */
proto.msg.ClientPendingMessage.prototype.setEntitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.ClientPendingMessage.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.msg.MessageEntity, opt_index);
};


proto.msg.ClientPendingMessage.prototype.clearEntitiesList = function() {
  this.setEntitiesList([]);
};


/**
 * optional InputMediaType MediaType = 11;
 * @return {!proto.msg.InputMediaType}
 */
proto.msg.ClientPendingMessage.prototype.getMediatype = function() {
  return /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.msg.InputMediaType} value */
proto.msg.ClientPendingMessage.prototype.setMediatype = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.msg.ClientPendingMessage.prototype.clearMediatype = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasMediatype = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bytes Media = 12;
 * @return {!(string|Uint8Array)}
 */
proto.msg.ClientPendingMessage.prototype.getMedia = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes Media = 12;
 * This is a type-conversion wrapper around `getMedia()`
 * @return {string}
 */
proto.msg.ClientPendingMessage.prototype.getMedia_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMedia()));
};


/**
 * optional bytes Media = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMedia()`
 * @return {!Uint8Array}
 */
proto.msg.ClientPendingMessage.prototype.getMedia_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMedia()));
};


/** @param {!(string|Uint8Array)} value */
proto.msg.ClientPendingMessage.prototype.setMedia = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.msg.ClientPendingMessage.prototype.clearMedia = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientPendingMessage.prototype.hasMedia = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.ClientSendMessageMedia = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.ClientSendMessageMedia.repeatedFields_, null);
};
goog.inherits(proto.msg.ClientSendMessageMedia, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.ClientSendMessageMedia.displayName = 'proto.msg.ClientSendMessageMedia';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.ClientSendMessageMedia.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.ClientSendMessageMedia.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.ClientSendMessageMedia.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.ClientSendMessageMedia} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientSendMessageMedia.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    mediatype: jspb.Message.getField(msg, 2),
    caption: jspb.Message.getField(msg, 3),
    filename: jspb.Message.getField(msg, 4),
    filepath: jspb.Message.getField(msg, 5),
    thumbfilepath: jspb.Message.getField(msg, 6),
    filemime: jspb.Message.getField(msg, 7),
    thumbmime: jspb.Message.getField(msg, 8),
    replyto: jspb.Message.getField(msg, 9),
    cleardraft: jspb.Message.getField(msg, 10),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    chat_core_message_medias_pb.DocumentAttribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.ClientSendMessageMedia}
 */
proto.msg.ClientSendMessageMedia.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.ClientSendMessageMedia;
  return proto.msg.ClientSendMessageMedia.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.ClientSendMessageMedia} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.ClientSendMessageMedia}
 */
proto.msg.ClientSendMessageMedia.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {!proto.msg.InputMediaType} */ (reader.readEnum());
      msg.setMediatype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbfilepath(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilemime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbmime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleardraft(value);
      break;
    case 11:
      var value = new chat_core_message_medias_pb.DocumentAttribute;
      reader.readMessage(value,chat_core_message_medias_pb.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.ClientSendMessageMedia.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.ClientSendMessageMedia.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.ClientSendMessageMedia} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientSendMessageMedia.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      chat_core_message_medias_pb.DocumentAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.ClientSendMessageMedia.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/** @param {!proto.msg.InputPeer} value */
proto.msg.ClientSendMessageMedia.prototype.setPeer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearPeer = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputMediaType MediaType = 2;
 * @return {!proto.msg.InputMediaType}
 */
proto.msg.ClientSendMessageMedia.prototype.getMediatype = function() {
  return /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.msg.InputMediaType} value */
proto.msg.ClientSendMessageMedia.prototype.setMediatype = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearMediatype = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasMediatype = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Caption = 3;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setCaption = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearCaption = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasCaption = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string FileName = 4;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setFilename = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearFilename = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasFilename = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string FilePath = 5;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setFilepath = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearFilepath = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasFilepath = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ThumbFilePath = 6;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getThumbfilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setThumbfilepath = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearThumbfilepath = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasThumbfilepath = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string FileMIME = 7;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getFilemime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setFilemime = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearFilemime = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasFilemime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string ThumbMIME = 8;
 * @return {string}
 */
proto.msg.ClientSendMessageMedia.prototype.getThumbmime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.msg.ClientSendMessageMedia.prototype.setThumbmime = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearThumbmime = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasThumbmime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 ReplyTo = 9;
 * @return {number}
 */
proto.msg.ClientSendMessageMedia.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.msg.ClientSendMessageMedia.prototype.setReplyto = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearReplyto = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool ClearDraft = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.getCleardraft = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.msg.ClientSendMessageMedia.prototype.setCleardraft = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.msg.ClientSendMessageMedia.prototype.clearCleardraft = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.ClientSendMessageMedia.prototype.hasCleardraft = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated DocumentAttribute Attributes = 11;
 * @return {!Array.<!proto.msg.DocumentAttribute>}
 */
proto.msg.ClientSendMessageMedia.prototype.getAttributesList = function() {
  return /** @type{!Array.<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_message_medias_pb.DocumentAttribute, 11));
};


/** @param {!Array.<!proto.msg.DocumentAttribute>} value */
proto.msg.ClientSendMessageMedia.prototype.setAttributesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.ClientSendMessageMedia.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.msg.DocumentAttribute, opt_index);
};


proto.msg.ClientSendMessageMedia.prototype.clearAttributesList = function() {
  this.setAttributesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.ClientSearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.ClientSearchResult.repeatedFields_, null);
};
goog.inherits(proto.msg.ClientSearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.ClientSearchResult.displayName = 'proto.msg.ClientSearchResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.ClientSearchResult.repeatedFields_ = [1,2,3,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.ClientSearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.ClientSearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.ClientSearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientSearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    chat_core_types_pb.UserMessage.toObject, includeInstance),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    chat_core_types_pb.User.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    chat_core_types_pb.Group.toObject, includeInstance),
    matchedusersList: jspb.Message.toObjectList(msg.getMatchedusersList(),
    chat_core_types_pb.ContactUser.toObject, includeInstance),
    matchedgroupsList: jspb.Message.toObjectList(msg.getMatchedgroupsList(),
    chat_core_types_pb.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.ClientSearchResult}
 */
proto.msg.ClientSearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.ClientSearchResult;
  return proto.msg.ClientSearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.ClientSearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.ClientSearchResult}
 */
proto.msg.ClientSearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.UserMessage;
      reader.readMessage(value,chat_core_types_pb.UserMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = new chat_core_types_pb.User;
      reader.readMessage(value,chat_core_types_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = new chat_core_types_pb.Group;
      reader.readMessage(value,chat_core_types_pb.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 5:
      var value = new chat_core_types_pb.ContactUser;
      reader.readMessage(value,chat_core_types_pb.ContactUser.deserializeBinaryFromReader);
      msg.addMatchedusers(value);
      break;
    case 6:
      var value = new chat_core_types_pb.Group;
      reader.readMessage(value,chat_core_types_pb.Group.deserializeBinaryFromReader);
      msg.addMatchedgroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.ClientSearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.ClientSearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.ClientSearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientSearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chat_core_types_pb.UserMessage.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      chat_core_types_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      chat_core_types_pb.Group.serializeBinaryToWriter
    );
  }
  f = message.getMatchedusersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      chat_core_types_pb.ContactUser.serializeBinaryToWriter
    );
  }
  f = message.getMatchedgroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      chat_core_types_pb.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserMessage Messages = 1;
 * @return {!Array.<!proto.msg.UserMessage>}
 */
proto.msg.ClientSearchResult.prototype.getMessagesList = function() {
  return /** @type{!Array.<!proto.msg.UserMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.UserMessage, 1));
};


/** @param {!Array.<!proto.msg.UserMessage>} value */
proto.msg.ClientSearchResult.prototype.setMessagesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.UserMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.UserMessage}
 */
proto.msg.ClientSearchResult.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.UserMessage, opt_index);
};


proto.msg.ClientSearchResult.prototype.clearMessagesList = function() {
  this.setMessagesList([]);
};


/**
 * repeated User Users = 2;
 * @return {!Array.<!proto.msg.User>}
 */
proto.msg.ClientSearchResult.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.msg.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.User, 2));
};


/** @param {!Array.<!proto.msg.User>} value */
proto.msg.ClientSearchResult.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msg.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.User}
 */
proto.msg.ClientSearchResult.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msg.User, opt_index);
};


proto.msg.ClientSearchResult.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated Group Groups = 3;
 * @return {!Array.<!proto.msg.Group>}
 */
proto.msg.ClientSearchResult.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.msg.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.Group, 3));
};


/** @param {!Array.<!proto.msg.Group>} value */
proto.msg.ClientSearchResult.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msg.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.Group}
 */
proto.msg.ClientSearchResult.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msg.Group, opt_index);
};


proto.msg.ClientSearchResult.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};


/**
 * repeated ContactUser MatchedUsers = 5;
 * @return {!Array.<!proto.msg.ContactUser>}
 */
proto.msg.ClientSearchResult.prototype.getMatchedusersList = function() {
  return /** @type{!Array.<!proto.msg.ContactUser>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.ContactUser, 5));
};


/** @param {!Array.<!proto.msg.ContactUser>} value */
proto.msg.ClientSearchResult.prototype.setMatchedusersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.ContactUser=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.ContactUser}
 */
proto.msg.ClientSearchResult.prototype.addMatchedusers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.ContactUser, opt_index);
};


proto.msg.ClientSearchResult.prototype.clearMatchedusersList = function() {
  this.setMatchedusersList([]);
};


/**
 * repeated Group MatchedGroups = 6;
 * @return {!Array.<!proto.msg.Group>}
 */
proto.msg.ClientSearchResult.prototype.getMatchedgroupsList = function() {
  return /** @type{!Array.<!proto.msg.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.Group, 6));
};


/** @param {!Array.<!proto.msg.Group>} value */
proto.msg.ClientSearchResult.prototype.setMatchedgroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.msg.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.Group}
 */
proto.msg.ClientSearchResult.prototype.addMatchedgroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.msg.Group, opt_index);
};


proto.msg.ClientSearchResult.prototype.clearMatchedgroupsList = function() {
  this.setMatchedgroupsList([]);
};


goog.object.extend(exports, proto.msg);

/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var core_types_pb = require('./core.types_pb.js');
goog.exportSymbol('proto.msg.SystemClientLog', null, global);
goog.exportSymbol('proto.msg.SystemDHGroups', null, global);
goog.exportSymbol('proto.msg.SystemGetDHGroups', null, global);
goog.exportSymbol('proto.msg.SystemGetPublicKeys', null, global);
goog.exportSymbol('proto.msg.SystemPublicKeys', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetPublicKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetPublicKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.SystemGetPublicKeys.displayName = 'proto.msg.SystemGetPublicKeys';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetPublicKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetPublicKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetPublicKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetPublicKeys.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetPublicKeys}
 */
proto.msg.SystemGetPublicKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetPublicKeys;
  return proto.msg.SystemGetPublicKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetPublicKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetPublicKeys}
 */
proto.msg.SystemGetPublicKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetPublicKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetPublicKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetPublicKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetPublicKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetDHGroups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetDHGroups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.SystemGetDHGroups.displayName = 'proto.msg.SystemGetDHGroups';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetDHGroups.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetDHGroups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetDHGroups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetDHGroups.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetDHGroups}
 */
proto.msg.SystemGetDHGroups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetDHGroups;
  return proto.msg.SystemGetDHGroups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetDHGroups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetDHGroups}
 */
proto.msg.SystemGetDHGroups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetDHGroups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetDHGroups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetDHGroups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetDHGroups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemClientLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemClientLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.SystemClientLog.displayName = 'proto.msg.SystemClientLog';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemClientLog.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemClientLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemClientLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemClientLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceid: jspb.Message.getField(msg, 1),
    deviceos: jspb.Message.getField(msg, 2),
    userid: jspb.Message.getField(msg, 3),
    text: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemClientLog}
 */
proto.msg.SystemClientLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemClientLog;
  return proto.msg.SystemClientLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemClientLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemClientLog}
 */
proto.msg.SystemClientLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceos(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemClientLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemClientLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemClientLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemClientLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * required string DeviceID = 1;
 * @return {string}
 */
proto.msg.SystemClientLog.prototype.getDeviceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.msg.SystemClientLog.prototype.setDeviceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.msg.SystemClientLog.prototype.clearDeviceid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.SystemClientLog.prototype.hasDeviceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string DeviceOS = 2;
 * @return {string}
 */
proto.msg.SystemClientLog.prototype.getDeviceos = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.msg.SystemClientLog.prototype.setDeviceos = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.msg.SystemClientLog.prototype.clearDeviceos = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.SystemClientLog.prototype.hasDeviceos = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 UserID = 3;
 * @return {number}
 */
proto.msg.SystemClientLog.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.msg.SystemClientLog.prototype.setUserid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.msg.SystemClientLog.prototype.clearUserid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.SystemClientLog.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string Text = 4;
 * @return {string}
 */
proto.msg.SystemClientLog.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.msg.SystemClientLog.prototype.setText = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.msg.SystemClientLog.prototype.clearText = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.SystemClientLog.prototype.hasText = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemPublicKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemPublicKeys.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemPublicKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.SystemPublicKeys.displayName = 'proto.msg.SystemPublicKeys';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemPublicKeys.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemPublicKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemPublicKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemPublicKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemPublicKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    rsapublickeysList: jspb.Message.toObjectList(msg.getRsapublickeysList(),
    core_types_pb.RSAPublicKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemPublicKeys}
 */
proto.msg.SystemPublicKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemPublicKeys;
  return proto.msg.SystemPublicKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemPublicKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemPublicKeys}
 */
proto.msg.SystemPublicKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.RSAPublicKey;
      reader.readMessage(value,core_types_pb.RSAPublicKey.deserializeBinaryFromReader);
      msg.addRsapublickeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemPublicKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemPublicKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemPublicKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemPublicKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRsapublickeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.RSAPublicKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RSAPublicKey RSAPublicKeys = 1;
 * @return {!Array<!proto.msg.RSAPublicKey>}
 */
proto.msg.SystemPublicKeys.prototype.getRsapublickeysList = function() {
  return /** @type{!Array<!proto.msg.RSAPublicKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.RSAPublicKey, 1));
};


/** @param {!Array<!proto.msg.RSAPublicKey>} value */
proto.msg.SystemPublicKeys.prototype.setRsapublickeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.RSAPublicKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.RSAPublicKey}
 */
proto.msg.SystemPublicKeys.prototype.addRsapublickeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.RSAPublicKey, opt_index);
};


proto.msg.SystemPublicKeys.prototype.clearRsapublickeysList = function() {
  this.setRsapublickeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemDHGroups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemDHGroups.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemDHGroups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.SystemDHGroups.displayName = 'proto.msg.SystemDHGroups';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemDHGroups.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemDHGroups.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemDHGroups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemDHGroups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemDHGroups.toObject = function(includeInstance, msg) {
  var f, obj = {
    dhgroupsList: jspb.Message.toObjectList(msg.getDhgroupsList(),
    core_types_pb.DHGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemDHGroups}
 */
proto.msg.SystemDHGroups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemDHGroups;
  return proto.msg.SystemDHGroups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemDHGroups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemDHGroups}
 */
proto.msg.SystemDHGroups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.DHGroup;
      reader.readMessage(value,core_types_pb.DHGroup.deserializeBinaryFromReader);
      msg.addDhgroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemDHGroups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemDHGroups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemDHGroups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemDHGroups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDhgroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.DHGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DHGroup DHGroups = 1;
 * @return {!Array<!proto.msg.DHGroup>}
 */
proto.msg.SystemDHGroups.prototype.getDhgroupsList = function() {
  return /** @type{!Array<!proto.msg.DHGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.DHGroup, 1));
};


/** @param {!Array<!proto.msg.DHGroup>} value */
proto.msg.SystemDHGroups.prototype.setDhgroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.DHGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DHGroup}
 */
proto.msg.SystemDHGroups.prototype.addDhgroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.DHGroup, opt_index);
};


proto.msg.SystemDHGroups.prototype.clearDhgroupsList = function() {
  this.setDhgroupsList([]);
};


goog.object.extend(exports, proto.msg);

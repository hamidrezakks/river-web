/* eslint-disable */
// source: chat.api.messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var chat_core_types_pb = require('./chat.core.types_pb.js');
goog.object.extend(proto, chat_core_types_pb);
goog.exportSymbol('proto.msg.InputMediaType', null, global);
goog.exportSymbol('proto.msg.MessagesBroadcast', null, global);
goog.exportSymbol('proto.msg.MessagesClearDraft', null, global);
goog.exportSymbol('proto.msg.MessagesClearHistory', null, global);
goog.exportSymbol('proto.msg.MessagesDelete', null, global);
goog.exportSymbol('proto.msg.MessagesDialogs', null, global);
goog.exportSymbol('proto.msg.MessagesEdit', null, global);
goog.exportSymbol('proto.msg.MessagesForward', null, global);
goog.exportSymbol('proto.msg.MessagesGet', null, global);
goog.exportSymbol('proto.msg.MessagesGetDialog', null, global);
goog.exportSymbol('proto.msg.MessagesGetDialogs', null, global);
goog.exportSymbol('proto.msg.MessagesGetHistory', null, global);
goog.exportSymbol('proto.msg.MessagesGetPinnedDialogs', null, global);
goog.exportSymbol('proto.msg.MessagesGetPollResults', null, global);
goog.exportSymbol('proto.msg.MessagesMany', null, global);
goog.exportSymbol('proto.msg.MessagesReadContents', null, global);
goog.exportSymbol('proto.msg.MessagesReadHistory', null, global);
goog.exportSymbol('proto.msg.MessagesReorderPinnedDialogs', null, global);
goog.exportSymbol('proto.msg.MessagesSaveDraft', null, global);
goog.exportSymbol('proto.msg.MessagesSend', null, global);
goog.exportSymbol('proto.msg.MessagesSendMedia', null, global);
goog.exportSymbol('proto.msg.MessagesSendScreenShotNotification', null, global);
goog.exportSymbol('proto.msg.MessagesSendVote', null, global);
goog.exportSymbol('proto.msg.MessagesSent', null, global);
goog.exportSymbol('proto.msg.MessagesSetTyping', null, global);
goog.exportSymbol('proto.msg.MessagesToggleDialogPin', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesSend.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesSend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSend.displayName = 'proto.msg.MessagesSend';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesBroadcast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesBroadcast.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesBroadcast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesBroadcast.displayName = 'proto.msg.MessagesBroadcast';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSendMedia = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesSendMedia, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSendMedia.displayName = 'proto.msg.MessagesSendMedia';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesEdit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesEdit.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesEdit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesEdit.displayName = 'proto.msg.MessagesEdit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesReadHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesReadHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesReadHistory.displayName = 'proto.msg.MessagesReadHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesGet.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesGet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGet.displayName = 'proto.msg.MessagesGet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGetHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesGetHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGetHistory.displayName = 'proto.msg.MessagesGetHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGetDialogs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesGetDialogs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGetDialogs.displayName = 'proto.msg.MessagesGetDialogs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGetPinnedDialogs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesGetPinnedDialogs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGetPinnedDialogs.displayName = 'proto.msg.MessagesGetPinnedDialogs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGetDialog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesGetDialog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGetDialog.displayName = 'proto.msg.MessagesGetDialog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSetTyping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesSetTyping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSetTyping.displayName = 'proto.msg.MessagesSetTyping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesClearHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesClearHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesClearHistory.displayName = 'proto.msg.MessagesClearHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesDelete.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesDelete.displayName = 'proto.msg.MessagesDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesForward = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesForward.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesForward, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesForward.displayName = 'proto.msg.MessagesForward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesReadContents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesReadContents.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesReadContents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesReadContents.displayName = 'proto.msg.MessagesReadContents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSaveDraft = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesSaveDraft.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesSaveDraft, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSaveDraft.displayName = 'proto.msg.MessagesSaveDraft';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesClearDraft = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesClearDraft, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesClearDraft.displayName = 'proto.msg.MessagesClearDraft';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesToggleDialogPin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesToggleDialogPin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesToggleDialogPin.displayName = 'proto.msg.MessagesToggleDialogPin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesReorderPinnedDialogs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesReorderPinnedDialogs.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesReorderPinnedDialogs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesReorderPinnedDialogs.displayName = 'proto.msg.MessagesReorderPinnedDialogs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSendScreenShotNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesSendScreenShotNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSendScreenShotNotification.displayName = 'proto.msg.MessagesSendScreenShotNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSendVote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesSendVote.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesSendVote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSendVote.displayName = 'proto.msg.MessagesSendVote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesGetPollResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesGetPollResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesGetPollResults.displayName = 'proto.msg.MessagesGetPollResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesDialogs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesDialogs.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesDialogs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesDialogs.displayName = 'proto.msg.MessagesDialogs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesSent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MessagesSent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesSent.displayName = 'proto.msg.MessagesSent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MessagesMany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MessagesMany.repeatedFields_, null);
};
goog.inherits(proto.msg.MessagesMany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MessagesMany.displayName = 'proto.msg.MessagesMany';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesSend.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSend.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSend} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSend.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    body: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    replyto: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    cleardraft: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    chat_core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSend}
 */
proto.msg.MessagesSend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSend;
  return proto.msg.MessagesSend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSend}
 */
proto.msg.MessagesSend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleardraft(value);
      break;
    case 8:
      var value = new chat_core_types_pb.MessageEntity;
      reader.readMessage(value,chat_core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSend} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      chat_core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * required int64 RandomID = 1;
 * @return {number}
 */
proto.msg.MessagesSend.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputPeer Peer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSend.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSend} returns this
*/
proto.msg.MessagesSend.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Body = 5;
 * @return {string}
 */
proto.msg.MessagesSend.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.setBody = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearBody = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.hasBody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 ReplyTo = 6;
 * @return {number}
 */
proto.msg.MessagesSend.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.setReplyto = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearReplyto = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool ClearDraft = 7;
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.getCleardraft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.setCleardraft = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearCleardraft = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSend.prototype.hasCleardraft = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated MessageEntity Entities = 8;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MessagesSend.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.MessageEntity, 8));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MessagesSend} returns this
*/
proto.msg.MessagesSend.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MessagesSend.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesSend} returns this
 */
proto.msg.MessagesSend.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesBroadcast.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesBroadcast.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesBroadcast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesBroadcast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesBroadcast.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    receiveridsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    chat_core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesBroadcast}
 */
proto.msg.MessagesBroadcast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesBroadcast;
  return proto.msg.MessagesBroadcast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesBroadcast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesBroadcast}
 */
proto.msg.MessagesBroadcast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addReceiverids(value);
      break;
    case 3:
      var value = new chat_core_types_pb.MessageEntity;
      reader.readMessage(value,chat_core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesBroadcast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesBroadcast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesBroadcast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesBroadcast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiveridsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      2,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      chat_core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * required string Body = 1;
 * @return {string}
 */
proto.msg.MessagesBroadcast.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.setBody = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.clearBody = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesBroadcast.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int64 ReceiverIDs = 2;
 * @return {!Array<number>}
 */
proto.msg.MessagesBroadcast.prototype.getReceiveridsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.setReceiveridsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.addReceiverids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.clearReceiveridsList = function() {
  return this.setReceiveridsList([]);
};


/**
 * repeated MessageEntity Entities = 3;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MessagesBroadcast.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.MessageEntity, 3));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MessagesBroadcast} returns this
*/
proto.msg.MessagesBroadcast.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MessagesBroadcast.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesBroadcast} returns this
 */
proto.msg.MessagesBroadcast.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSendMedia.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSendMedia.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSendMedia} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendMedia.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    mediatype: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    mediadata: msg.getMediadata_asB64(),
    replyto: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    cleardraft: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSendMedia}
 */
proto.msg.MessagesSendMedia.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSendMedia;
  return proto.msg.MessagesSendMedia.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSendMedia} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSendMedia}
 */
proto.msg.MessagesSendMedia.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {!proto.msg.InputMediaType} */ (reader.readEnum());
      msg.setMediatype(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMediadata(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleardraft(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSendMedia.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSendMedia.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSendMedia} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendMedia.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * required int64 RandomID = 1;
 * @return {number}
 */
proto.msg.MessagesSendMedia.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputPeer Peer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSendMedia.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSendMedia} returns this
*/
proto.msg.MessagesSendMedia.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required InputMediaType MediaType = 3;
 * @return {!proto.msg.InputMediaType}
 */
proto.msg.MessagesSendMedia.prototype.getMediatype = function() {
  return /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.msg.InputMediaType} value
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.setMediatype = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearMediatype = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasMediatype = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required bytes MediaData = 4;
 * @return {!(string|Uint8Array)}
 */
proto.msg.MessagesSendMedia.prototype.getMediadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * required bytes MediaData = 4;
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {string}
 */
proto.msg.MessagesSendMedia.prototype.getMediadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMediadata()));
};


/**
 * required bytes MediaData = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {!Uint8Array}
 */
proto.msg.MessagesSendMedia.prototype.getMediadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMediadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.setMediadata = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearMediadata = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasMediadata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 ReplyTo = 5;
 * @return {number}
 */
proto.msg.MessagesSendMedia.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.setReplyto = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearReplyto = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool ClearDraft = 6;
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.getCleardraft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.setCleardraft = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendMedia} returns this
 */
proto.msg.MessagesSendMedia.prototype.clearCleardraft = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendMedia.prototype.hasCleardraft = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesEdit.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesEdit.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesEdit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesEdit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesEdit.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    body: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    messageid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    chat_core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesEdit}
 */
proto.msg.MessagesEdit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesEdit;
  return proto.msg.MessagesEdit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesEdit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesEdit}
 */
proto.msg.MessagesEdit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 5:
      var value = new chat_core_types_pb.MessageEntity;
      reader.readMessage(value,chat_core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesEdit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesEdit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesEdit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesEdit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      chat_core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * required int64 RandomID = 1;
 * @return {number}
 */
proto.msg.MessagesEdit.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesEdit.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputPeer Peer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesEdit.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesEdit} returns this
*/
proto.msg.MessagesEdit.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesEdit.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Body = 3;
 * @return {string}
 */
proto.msg.MessagesEdit.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.setBody = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.clearBody = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesEdit.prototype.hasBody = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 MessageID = 4;
 * @return {number}
 */
proto.msg.MessagesEdit.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.setMessageid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.clearMessageid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesEdit.prototype.hasMessageid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated MessageEntity Entities = 5;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MessagesEdit.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.MessageEntity, 5));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MessagesEdit} returns this
*/
proto.msg.MessagesEdit.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MessagesEdit.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesEdit} returns this
 */
proto.msg.MessagesEdit.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesReadHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesReadHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesReadHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReadHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    maxid: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesReadHistory}
 */
proto.msg.MessagesReadHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesReadHistory;
  return proto.msg.MessagesReadHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesReadHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesReadHistory}
 */
proto.msg.MessagesReadHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesReadHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesReadHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesReadHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReadHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * required InputPeer Peer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesReadHistory.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesReadHistory} returns this
*/
proto.msg.MessagesReadHistory.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesReadHistory} returns this
 */
proto.msg.MessagesReadHistory.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesReadHistory.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 MaxID = 3;
 * @return {number}
 */
proto.msg.MessagesReadHistory.prototype.getMaxid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesReadHistory} returns this
 */
proto.msg.MessagesReadHistory.prototype.setMaxid = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesReadHistory} returns this
 */
proto.msg.MessagesReadHistory.prototype.clearMaxid = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesReadHistory.prototype.hasMaxid = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesGet.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGet.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGet.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    messagesidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGet}
 */
proto.msg.MessagesGet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGet;
  return proto.msg.MessagesGet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGet}
 */
proto.msg.MessagesGet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addMessagesids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessagesidsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      2,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesGet.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesGet} returns this
*/
proto.msg.MessagesGet.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGet} returns this
 */
proto.msg.MessagesGet.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGet.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int64 MessagesIDs = 2;
 * @return {!Array<number>}
 */
proto.msg.MessagesGet.prototype.getMessagesidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.MessagesGet} returns this
 */
proto.msg.MessagesGet.prototype.setMessagesidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesGet} returns this
 */
proto.msg.MessagesGet.prototype.addMessagesids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesGet} returns this
 */
proto.msg.MessagesGet.prototype.clearMessagesidsList = function() {
  return this.setMessagesidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGetHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGetHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGetHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    limit: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    maxid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    minid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGetHistory}
 */
proto.msg.MessagesGetHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGetHistory;
  return proto.msg.MessagesGetHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGetHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGetHistory}
 */
proto.msg.MessagesGetHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGetHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGetHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGetHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * required InputPeer Peer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesGetHistory.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesGetHistory} returns this
*/
proto.msg.MessagesGetHistory.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetHistory.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 Limit = 3;
 * @return {number}
 */
proto.msg.MessagesGetHistory.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetHistory.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 MaxID = 4;
 * @return {number}
 */
proto.msg.MessagesGetHistory.prototype.getMaxid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.setMaxid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.clearMaxid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetHistory.prototype.hasMaxid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 MinID = 5;
 * @return {number}
 */
proto.msg.MessagesGetHistory.prototype.getMinid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.setMinid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetHistory} returns this
 */
proto.msg.MessagesGetHistory.prototype.clearMinid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetHistory.prototype.hasMinid = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGetDialogs.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGetDialogs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGetDialogs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetDialogs.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    offset: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    excludepinned: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGetDialogs}
 */
proto.msg.MessagesGetDialogs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGetDialogs;
  return proto.msg.MessagesGetDialogs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGetDialogs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGetDialogs}
 */
proto.msg.MessagesGetDialogs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludepinned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGetDialogs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGetDialogs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGetDialogs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetDialogs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * required int32 Limit = 2;
 * @return {number}
 */
proto.msg.MessagesGetDialogs.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.setLimit = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.clearLimit = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetDialogs.prototype.hasLimit = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 Offset = 3;
 * @return {number}
 */
proto.msg.MessagesGetDialogs.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.setOffset = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.clearOffset = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetDialogs.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool ExcludePinned = 4;
 * @return {boolean}
 */
proto.msg.MessagesGetDialogs.prototype.getExcludepinned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.setExcludepinned = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetDialogs} returns this
 */
proto.msg.MessagesGetDialogs.prototype.clearExcludepinned = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetDialogs.prototype.hasExcludepinned = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGetPinnedDialogs.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGetPinnedDialogs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGetPinnedDialogs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetPinnedDialogs.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGetPinnedDialogs}
 */
proto.msg.MessagesGetPinnedDialogs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGetPinnedDialogs;
  return proto.msg.MessagesGetPinnedDialogs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGetPinnedDialogs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGetPinnedDialogs}
 */
proto.msg.MessagesGetPinnedDialogs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGetPinnedDialogs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGetPinnedDialogs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGetPinnedDialogs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetPinnedDialogs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGetDialog.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGetDialog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGetDialog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetDialog.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGetDialog}
 */
proto.msg.MessagesGetDialog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGetDialog;
  return proto.msg.MessagesGetDialog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGetDialog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGetDialog}
 */
proto.msg.MessagesGetDialog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGetDialog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGetDialog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGetDialog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetDialog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesGetDialog.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesGetDialog} returns this
*/
proto.msg.MessagesGetDialog.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetDialog} returns this
 */
proto.msg.MessagesGetDialog.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetDialog.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSetTyping.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSetTyping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSetTyping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSetTyping.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    action: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSetTyping}
 */
proto.msg.MessagesSetTyping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSetTyping;
  return proto.msg.MessagesSetTyping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSetTyping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSetTyping}
 */
proto.msg.MessagesSetTyping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {!proto.msg.TypingAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSetTyping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSetTyping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSetTyping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSetTyping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.msg.TypingAction} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSetTyping.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSetTyping} returns this
*/
proto.msg.MessagesSetTyping.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSetTyping} returns this
 */
proto.msg.MessagesSetTyping.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSetTyping.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required TypingAction Action = 2;
 * @return {!proto.msg.TypingAction}
 */
proto.msg.MessagesSetTyping.prototype.getAction = function() {
  return /** @type {!proto.msg.TypingAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.msg.TypingAction} value
 * @return {!proto.msg.MessagesSetTyping} returns this
 */
proto.msg.MessagesSetTyping.prototype.setAction = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSetTyping} returns this
 */
proto.msg.MessagesSetTyping.prototype.clearAction = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSetTyping.prototype.hasAction = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesClearHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesClearHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesClearHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesClearHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    maxid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    pb_delete: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesClearHistory}
 */
proto.msg.MessagesClearHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesClearHistory;
  return proto.msg.MessagesClearHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesClearHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesClearHistory}
 */
proto.msg.MessagesClearHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesClearHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesClearHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesClearHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesClearHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesClearHistory.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesClearHistory} returns this
*/
proto.msg.MessagesClearHistory.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesClearHistory} returns this
 */
proto.msg.MessagesClearHistory.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesClearHistory.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 MaxID = 2;
 * @return {number}
 */
proto.msg.MessagesClearHistory.prototype.getMaxid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesClearHistory} returns this
 */
proto.msg.MessagesClearHistory.prototype.setMaxid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesClearHistory} returns this
 */
proto.msg.MessagesClearHistory.prototype.clearMaxid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesClearHistory.prototype.hasMaxid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required bool Delete = 3;
 * @return {boolean}
 */
proto.msg.MessagesClearHistory.prototype.getDelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesClearHistory} returns this
 */
proto.msg.MessagesClearHistory.prototype.setDelete = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesClearHistory} returns this
 */
proto.msg.MessagesClearHistory.prototype.clearDelete = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesClearHistory.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesDelete.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesDelete.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    messageidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    revoke: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesDelete}
 */
proto.msg.MessagesDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesDelete;
  return proto.msg.MessagesDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesDelete}
 */
proto.msg.MessagesDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addMessageids(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRevoke(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessageidsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesDelete.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesDelete} returns this
*/
proto.msg.MessagesDelete.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesDelete.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int64 MessageIDs = 2;
 * @return {!Array<number>}
 */
proto.msg.MessagesDelete.prototype.getMessageidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.setMessageidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.addMessageids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.clearMessageidsList = function() {
  return this.setMessageidsList([]);
};


/**
 * required bool Revoke = 3;
 * @return {boolean}
 */
proto.msg.MessagesDelete.prototype.getRevoke = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.setRevoke = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesDelete} returns this
 */
proto.msg.MessagesDelete.prototype.clearRevoke = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesDelete.prototype.hasRevoke = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesForward.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesForward.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesForward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesForward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesForward.toObject = function(includeInstance, msg) {
  var f, obj = {
    frompeer: (f = msg.getFrompeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    topeer: (f = msg.getTopeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    silence: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    messageidsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    randomid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesForward}
 */
proto.msg.MessagesForward.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesForward;
  return proto.msg.MessagesForward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesForward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesForward}
 */
proto.msg.MessagesForward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setFrompeer(value);
      break;
    case 2:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setTopeer(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSilence(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addMessageids(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesForward.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesForward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesForward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesForward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrompeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getTopeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMessageidsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * required InputPeer FromPeer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesForward.prototype.getFrompeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesForward} returns this
*/
proto.msg.MessagesForward.prototype.setFrompeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.clearFrompeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesForward.prototype.hasFrompeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required InputPeer ToPeer = 2;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesForward.prototype.getTopeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 2, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesForward} returns this
*/
proto.msg.MessagesForward.prototype.setTopeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.clearTopeer = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesForward.prototype.hasTopeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required bool Silence = 3;
 * @return {boolean}
 */
proto.msg.MessagesForward.prototype.getSilence = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.setSilence = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.clearSilence = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesForward.prototype.hasSilence = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated int64 MessageIDs = 4;
 * @return {!Array<number>}
 */
proto.msg.MessagesForward.prototype.getMessageidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.setMessageidsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.addMessageids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.clearMessageidsList = function() {
  return this.setMessageidsList([]);
};


/**
 * required int64 RandomID = 5;
 * @return {number}
 */
proto.msg.MessagesForward.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesForward} returns this
 */
proto.msg.MessagesForward.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesForward.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesReadContents.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesReadContents.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesReadContents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesReadContents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReadContents.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    messageidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesReadContents}
 */
proto.msg.MessagesReadContents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesReadContents;
  return proto.msg.MessagesReadContents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesReadContents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesReadContents}
 */
proto.msg.MessagesReadContents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addMessageids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesReadContents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesReadContents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesReadContents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReadContents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessageidsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      2,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesReadContents.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesReadContents} returns this
*/
proto.msg.MessagesReadContents.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesReadContents} returns this
 */
proto.msg.MessagesReadContents.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesReadContents.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int64 MessageIDs = 2;
 * @return {!Array<number>}
 */
proto.msg.MessagesReadContents.prototype.getMessageidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.MessagesReadContents} returns this
 */
proto.msg.MessagesReadContents.prototype.setMessageidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesReadContents} returns this
 */
proto.msg.MessagesReadContents.prototype.addMessageids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesReadContents} returns this
 */
proto.msg.MessagesReadContents.prototype.clearMessageidsList = function() {
  return this.setMessageidsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesSaveDraft.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSaveDraft.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSaveDraft.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSaveDraft} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSaveDraft.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    replyto: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    body: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    chat_core_types_pb.MessageEntity.toObject, includeInstance),
    editedid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSaveDraft}
 */
proto.msg.MessagesSaveDraft.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSaveDraft;
  return proto.msg.MessagesSaveDraft.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSaveDraft} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSaveDraft}
 */
proto.msg.MessagesSaveDraft.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 4:
      var value = new chat_core_types_pb.MessageEntity;
      reader.readMessage(value,chat_core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEditedid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSaveDraft.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSaveDraft.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSaveDraft} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSaveDraft.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      chat_core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSaveDraft.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSaveDraft} returns this
*/
proto.msg.MessagesSaveDraft.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSaveDraft.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 ReplyTo = 2;
 * @return {number}
 */
proto.msg.MessagesSaveDraft.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.setReplyto = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.clearReplyto = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSaveDraft.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Body = 3;
 * @return {string}
 */
proto.msg.MessagesSaveDraft.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.setBody = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.clearBody = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSaveDraft.prototype.hasBody = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated MessageEntity Entities = 4;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MessagesSaveDraft.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.MessageEntity, 4));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MessagesSaveDraft} returns this
*/
proto.msg.MessagesSaveDraft.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MessagesSaveDraft.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional int64 EditedID = 5;
 * @return {number}
 */
proto.msg.MessagesSaveDraft.prototype.getEditedid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.setEditedid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSaveDraft} returns this
 */
proto.msg.MessagesSaveDraft.prototype.clearEditedid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSaveDraft.prototype.hasEditedid = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesClearDraft.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesClearDraft.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesClearDraft} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesClearDraft.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesClearDraft}
 */
proto.msg.MessagesClearDraft.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesClearDraft;
  return proto.msg.MessagesClearDraft.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesClearDraft} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesClearDraft}
 */
proto.msg.MessagesClearDraft.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesClearDraft.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesClearDraft.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesClearDraft} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesClearDraft.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesClearDraft.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesClearDraft} returns this
*/
proto.msg.MessagesClearDraft.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesClearDraft} returns this
 */
proto.msg.MessagesClearDraft.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesClearDraft.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesToggleDialogPin.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesToggleDialogPin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesToggleDialogPin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesToggleDialogPin.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    pin: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesToggleDialogPin}
 */
proto.msg.MessagesToggleDialogPin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesToggleDialogPin;
  return proto.msg.MessagesToggleDialogPin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesToggleDialogPin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesToggleDialogPin}
 */
proto.msg.MessagesToggleDialogPin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesToggleDialogPin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesToggleDialogPin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesToggleDialogPin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesToggleDialogPin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesToggleDialogPin.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesToggleDialogPin} returns this
*/
proto.msg.MessagesToggleDialogPin.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesToggleDialogPin} returns this
 */
proto.msg.MessagesToggleDialogPin.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesToggleDialogPin.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required bool Pin = 2;
 * @return {boolean}
 */
proto.msg.MessagesToggleDialogPin.prototype.getPin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesToggleDialogPin} returns this
 */
proto.msg.MessagesToggleDialogPin.prototype.setPin = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesToggleDialogPin} returns this
 */
proto.msg.MessagesToggleDialogPin.prototype.clearPin = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesToggleDialogPin.prototype.hasPin = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesReorderPinnedDialogs.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesReorderPinnedDialogs.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesReorderPinnedDialogs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesReorderPinnedDialogs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReorderPinnedDialogs.toObject = function(includeInstance, msg) {
  var f, obj = {
    peersList: jspb.Message.toObjectList(msg.getPeersList(),
    chat_core_types_pb.InputPeer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesReorderPinnedDialogs}
 */
proto.msg.MessagesReorderPinnedDialogs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesReorderPinnedDialogs;
  return proto.msg.MessagesReorderPinnedDialogs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesReorderPinnedDialogs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesReorderPinnedDialogs}
 */
proto.msg.MessagesReorderPinnedDialogs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.addPeers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesReorderPinnedDialogs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesReorderPinnedDialogs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesReorderPinnedDialogs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesReorderPinnedDialogs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InputPeer Peers = 1;
 * @return {!Array<!proto.msg.InputPeer>}
 */
proto.msg.MessagesReorderPinnedDialogs.prototype.getPeersList = function() {
  return /** @type{!Array<!proto.msg.InputPeer>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.InputPeer, 1));
};


/**
 * @param {!Array<!proto.msg.InputPeer>} value
 * @return {!proto.msg.MessagesReorderPinnedDialogs} returns this
*/
proto.msg.MessagesReorderPinnedDialogs.prototype.setPeersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.InputPeer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesReorderPinnedDialogs.prototype.addPeers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.InputPeer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesReorderPinnedDialogs} returns this
 */
proto.msg.MessagesReorderPinnedDialogs.prototype.clearPeersList = function() {
  return this.setPeersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSendScreenShotNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSendScreenShotNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendScreenShotNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    randomid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    replyto: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    minid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    maxid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSendScreenShotNotification}
 */
proto.msg.MessagesSendScreenShotNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSendScreenShotNotification;
  return proto.msg.MessagesSendScreenShotNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSendScreenShotNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSendScreenShotNotification}
 */
proto.msg.MessagesSendScreenShotNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSendScreenShotNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSendScreenShotNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendScreenShotNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
*/
proto.msg.MessagesSendScreenShotNotification.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 RandomID = 2;
 * @return {number}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 ReplyTo = 3;
 * @return {number}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.setReplyto = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.clearReplyto = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.hasReplyto = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 MinID = 4;
 * @return {number}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.getMinid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.setMinid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.clearMinid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.hasMinid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 MaxID = 5;
 * @return {number}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.getMaxid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.setMaxid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendScreenShotNotification} returns this
 */
proto.msg.MessagesSendScreenShotNotification.prototype.clearMaxid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendScreenShotNotification.prototype.hasMaxid = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesSendVote.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSendVote.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSendVote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSendVote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendVote.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    messageid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    optionsList: msg.getOptionsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSendVote}
 */
proto.msg.MessagesSendVote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSendVote;
  return proto.msg.MessagesSendVote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSendVote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSendVote}
 */
proto.msg.MessagesSendVote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSendVote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSendVote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSendVote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSendVote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOptionsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesSendVote.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesSendVote} returns this
*/
proto.msg.MessagesSendVote.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendVote.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 MessageID = 2;
 * @return {number}
 */
proto.msg.MessagesSendVote.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.setMessageid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.clearMessageid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSendVote.prototype.hasMessageid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated bytes Options = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.msg.MessagesSendVote.prototype.getOptionsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes Options = 3;
 * This is a type-conversion wrapper around `getOptionsList()`
 * @return {!Array<string>}
 */
proto.msg.MessagesSendVote.prototype.getOptionsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getOptionsList()));
};


/**
 * repeated bytes Options = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOptionsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.msg.MessagesSendVote.prototype.getOptionsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getOptionsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.setOptionsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.addOptions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesSendVote} returns this
 */
proto.msg.MessagesSendVote.prototype.clearOptionsList = function() {
  return this.setOptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesGetPollResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesGetPollResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesGetPollResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetPollResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && chat_core_types_pb.InputPeer.toObject(includeInstance, f),
    messageid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesGetPollResults}
 */
proto.msg.MessagesGetPollResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesGetPollResults;
  return proto.msg.MessagesGetPollResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesGetPollResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesGetPollResults}
 */
proto.msg.MessagesGetPollResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.InputPeer;
      reader.readMessage(value,chat_core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesGetPollResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesGetPollResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesGetPollResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesGetPollResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      chat_core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * required InputPeer Peer = 1;
 * @return {!proto.msg.InputPeer}
 */
proto.msg.MessagesGetPollResults.prototype.getPeer = function() {
  return /** @type{!proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputPeer, 1, 1));
};


/**
 * @param {!proto.msg.InputPeer} value
 * @return {!proto.msg.MessagesGetPollResults} returns this
*/
proto.msg.MessagesGetPollResults.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetPollResults} returns this
 */
proto.msg.MessagesGetPollResults.prototype.clearPeer = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetPollResults.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 MessageID = 2;
 * @return {number}
 */
proto.msg.MessagesGetPollResults.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesGetPollResults} returns this
 */
proto.msg.MessagesGetPollResults.prototype.setMessageid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesGetPollResults} returns this
 */
proto.msg.MessagesGetPollResults.prototype.clearMessageid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesGetPollResults.prototype.hasMessageid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesDialogs.repeatedFields_ = [1,2,3,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesDialogs.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesDialogs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesDialogs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesDialogs.toObject = function(includeInstance, msg) {
  var f, obj = {
    dialogsList: jspb.Message.toObjectList(msg.getDialogsList(),
    chat_core_types_pb.Dialog.toObject, includeInstance),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    chat_core_types_pb.User.toObject, includeInstance),
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    chat_core_types_pb.UserMessage.toObject, includeInstance),
    count: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    updateid: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    chat_core_types_pb.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesDialogs}
 */
proto.msg.MessagesDialogs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesDialogs;
  return proto.msg.MessagesDialogs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesDialogs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesDialogs}
 */
proto.msg.MessagesDialogs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.Dialog;
      reader.readMessage(value,chat_core_types_pb.Dialog.deserializeBinaryFromReader);
      msg.addDialogs(value);
      break;
    case 2:
      var value = new chat_core_types_pb.User;
      reader.readMessage(value,chat_core_types_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = new chat_core_types_pb.UserMessage;
      reader.readMessage(value,chat_core_types_pb.UserMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdateid(value);
      break;
    case 6:
      var value = new chat_core_types_pb.Group;
      reader.readMessage(value,chat_core_types_pb.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesDialogs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesDialogs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesDialogs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesDialogs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDialogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chat_core_types_pb.Dialog.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      chat_core_types_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      chat_core_types_pb.UserMessage.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      chat_core_types_pb.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Dialog Dialogs = 1;
 * @return {!Array<!proto.msg.Dialog>}
 */
proto.msg.MessagesDialogs.prototype.getDialogsList = function() {
  return /** @type{!Array<!proto.msg.Dialog>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.Dialog, 1));
};


/**
 * @param {!Array<!proto.msg.Dialog>} value
 * @return {!proto.msg.MessagesDialogs} returns this
*/
proto.msg.MessagesDialogs.prototype.setDialogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.Dialog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.Dialog}
 */
proto.msg.MessagesDialogs.prototype.addDialogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.Dialog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearDialogsList = function() {
  return this.setDialogsList([]);
};


/**
 * repeated User Users = 2;
 * @return {!Array<!proto.msg.User>}
 */
proto.msg.MessagesDialogs.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.msg.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.User, 2));
};


/**
 * @param {!Array<!proto.msg.User>} value
 * @return {!proto.msg.MessagesDialogs} returns this
*/
proto.msg.MessagesDialogs.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msg.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.User}
 */
proto.msg.MessagesDialogs.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msg.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated UserMessage Messages = 3;
 * @return {!Array<!proto.msg.UserMessage>}
 */
proto.msg.MessagesDialogs.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.msg.UserMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.UserMessage, 3));
};


/**
 * @param {!Array<!proto.msg.UserMessage>} value
 * @return {!proto.msg.MessagesDialogs} returns this
*/
proto.msg.MessagesDialogs.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msg.UserMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.UserMessage}
 */
proto.msg.MessagesDialogs.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msg.UserMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * required int32 Count = 4;
 * @return {number}
 */
proto.msg.MessagesDialogs.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearCount = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesDialogs.prototype.hasCount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 UpdateID = 5;
 * @return {number}
 */
proto.msg.MessagesDialogs.prototype.getUpdateid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.setUpdateid = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearUpdateid = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesDialogs.prototype.hasUpdateid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Group Groups = 6;
 * @return {!Array<!proto.msg.Group>}
 */
proto.msg.MessagesDialogs.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.msg.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.Group, 6));
};


/**
 * @param {!Array<!proto.msg.Group>} value
 * @return {!proto.msg.MessagesDialogs} returns this
*/
proto.msg.MessagesDialogs.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.msg.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.Group}
 */
proto.msg.MessagesDialogs.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.msg.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesDialogs} returns this
 */
proto.msg.MessagesDialogs.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesSent.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesSent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesSent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSent.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageid: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    randomid: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    createdon: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesSent}
 */
proto.msg.MessagesSent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesSent;
  return proto.msg.MessagesSent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesSent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesSent}
 */
proto.msg.MessagesSent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesSent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesSent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesSent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesSent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * required int64 MessageID = 1;
 * @return {number}
 */
proto.msg.MessagesSent.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.setMessageid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.clearMessageid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSent.prototype.hasMessageid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int64 RandomID = 2;
 * @return {number}
 */
proto.msg.MessagesSent.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.setRandomid = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.clearRandomid = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSent.prototype.hasRandomid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 CreatedOn = 3;
 * @return {number}
 */
proto.msg.MessagesSent.prototype.getCreatedon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.setCreatedon = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesSent} returns this
 */
proto.msg.MessagesSent.prototype.clearCreatedon = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesSent.prototype.hasCreatedon = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MessagesMany.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MessagesMany.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MessagesMany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MessagesMany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesMany.toObject = function(includeInstance, msg) {
  var f, obj = {
    messagesList: jspb.Message.toObjectList(msg.getMessagesList(),
    chat_core_types_pb.UserMessage.toObject, includeInstance),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    chat_core_types_pb.User.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    chat_core_types_pb.Group.toObject, includeInstance),
    continuous: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MessagesMany}
 */
proto.msg.MessagesMany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MessagesMany;
  return proto.msg.MessagesMany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MessagesMany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MessagesMany}
 */
proto.msg.MessagesMany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new chat_core_types_pb.UserMessage;
      reader.readMessage(value,chat_core_types_pb.UserMessage.deserializeBinaryFromReader);
      msg.addMessages(value);
      break;
    case 2:
      var value = new chat_core_types_pb.User;
      reader.readMessage(value,chat_core_types_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = new chat_core_types_pb.Group;
      reader.readMessage(value,chat_core_types_pb.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinuous(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MessagesMany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MessagesMany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MessagesMany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MessagesMany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      chat_core_types_pb.UserMessage.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      chat_core_types_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      chat_core_types_pb.Group.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * repeated UserMessage Messages = 1;
 * @return {!Array<!proto.msg.UserMessage>}
 */
proto.msg.MessagesMany.prototype.getMessagesList = function() {
  return /** @type{!Array<!proto.msg.UserMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.UserMessage, 1));
};


/**
 * @param {!Array<!proto.msg.UserMessage>} value
 * @return {!proto.msg.MessagesMany} returns this
*/
proto.msg.MessagesMany.prototype.setMessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.UserMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.UserMessage}
 */
proto.msg.MessagesMany.prototype.addMessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.UserMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesMany} returns this
 */
proto.msg.MessagesMany.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * repeated User Users = 2;
 * @return {!Array<!proto.msg.User>}
 */
proto.msg.MessagesMany.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.msg.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.User, 2));
};


/**
 * @param {!Array<!proto.msg.User>} value
 * @return {!proto.msg.MessagesMany} returns this
*/
proto.msg.MessagesMany.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msg.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.User}
 */
proto.msg.MessagesMany.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msg.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesMany} returns this
 */
proto.msg.MessagesMany.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated Group Groups = 3;
 * @return {!Array<!proto.msg.Group>}
 */
proto.msg.MessagesMany.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.msg.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, chat_core_types_pb.Group, 3));
};


/**
 * @param {!Array<!proto.msg.Group>} value
 * @return {!proto.msg.MessagesMany} returns this
*/
proto.msg.MessagesMany.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msg.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.Group}
 */
proto.msg.MessagesMany.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msg.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MessagesMany} returns this
 */
proto.msg.MessagesMany.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional bool Continuous = 4;
 * @return {boolean}
 */
proto.msg.MessagesMany.prototype.getContinuous = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MessagesMany} returns this
 */
proto.msg.MessagesMany.prototype.setContinuous = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.MessagesMany} returns this
 */
proto.msg.MessagesMany.prototype.clearContinuous = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MessagesMany.prototype.hasContinuous = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.msg.InputMediaType = {
  INPUTMEDIATYPEEMPTY: 0,
  INPUTMEDIATYPEINVOICE: 1,
  INPUTMEDIATYPEPOLL: 2,
  INPUTMEDIATYPECONTACT: 3,
  INPUTMEDIATYPEUPLOADEDDOCUMENT: 4,
  INPUTMEDIATYPEDOCUMENT: 5,
  INPUTMEDIATYPEGEOLOCATION: 6,
  INPUTMEDIATYPERESERVED1: 7,
  INPUTMEDIATYPERESERVED2: 8,
  INPUTMEDIATYPERESERVED3: 9,
  INPUTMEDIATYPERESERVED4: 10,
  INPUTMEDIATYPERESERVED5: 11,
  INPUTMEDIATYPERESERVED6: 12,
  INPUTMEDIATYPERESERVED7: 13,
  INPUTMEDIATYPERESERVED8: 14
};

goog.object.extend(exports, proto.msg);

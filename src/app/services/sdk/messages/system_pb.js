/* eslint-disable */
// source: system.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var core_types_pb = require('./core.types_pb.js');
goog.object.extend(proto, core_types_pb);
goog.exportSymbol('proto.msg.AppUpdate', null, global);
goog.exportSymbol('proto.msg.ClientUsage', null, global);
goog.exportSymbol('proto.msg.DataCenter', null, global);
goog.exportSymbol('proto.msg.SystemConfig', null, global);
goog.exportSymbol('proto.msg.SystemDHGroups', null, global);
goog.exportSymbol('proto.msg.SystemGetConfig', null, global);
goog.exportSymbol('proto.msg.SystemGetDHGroups', null, global);
goog.exportSymbol('proto.msg.SystemGetInfo', null, global);
goog.exportSymbol('proto.msg.SystemGetPublicKeys', null, global);
goog.exportSymbol('proto.msg.SystemGetResponse', null, global);
goog.exportSymbol('proto.msg.SystemGetSalts', null, global);
goog.exportSymbol('proto.msg.SystemGetServerTime', null, global);
goog.exportSymbol('proto.msg.SystemInfo', null, global);
goog.exportSymbol('proto.msg.SystemPublicKeys', null, global);
goog.exportSymbol('proto.msg.SystemSalts', null, global);
goog.exportSymbol('proto.msg.SystemServerTime', null, global);
goog.exportSymbol('proto.msg.SystemUploadUsage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetPublicKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetPublicKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetPublicKeys.displayName = 'proto.msg.SystemGetPublicKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetDHGroups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetDHGroups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetDHGroups.displayName = 'proto.msg.SystemGetDHGroups';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetServerTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetServerTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetServerTime.displayName = 'proto.msg.SystemGetServerTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetInfo.displayName = 'proto.msg.SystemGetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetSalts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetSalts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetSalts.displayName = 'proto.msg.SystemGetSalts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetConfig.displayName = 'proto.msg.SystemGetConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemUploadUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemUploadUsage.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemUploadUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemUploadUsage.displayName = 'proto.msg.SystemUploadUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemGetResponse.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetResponse.displayName = 'proto.msg.SystemGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.ClientUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.ClientUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.ClientUsage.displayName = 'proto.msg.ClientUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemConfig.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemConfig.displayName = 'proto.msg.SystemConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DataCenter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DataCenter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DataCenter.displayName = 'proto.msg.DataCenter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemSalts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemSalts.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemSalts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemSalts.displayName = 'proto.msg.SystemSalts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.AppUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.AppUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.AppUpdate.displayName = 'proto.msg.AppUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemInfo.displayName = 'proto.msg.SystemInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemServerTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemServerTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemServerTime.displayName = 'proto.msg.SystemServerTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemPublicKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemPublicKeys.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemPublicKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemPublicKeys.displayName = 'proto.msg.SystemPublicKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemDHGroups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemDHGroups.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemDHGroups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemDHGroups.displayName = 'proto.msg.SystemDHGroups';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetPublicKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetPublicKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetPublicKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetPublicKeys.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetPublicKeys}
 */
proto.msg.SystemGetPublicKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetPublicKeys;
  return proto.msg.SystemGetPublicKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetPublicKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetPublicKeys}
 */
proto.msg.SystemGetPublicKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetPublicKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetPublicKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetPublicKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetPublicKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetDHGroups.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetDHGroups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetDHGroups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetDHGroups.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetDHGroups}
 */
proto.msg.SystemGetDHGroups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetDHGroups;
  return proto.msg.SystemGetDHGroups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetDHGroups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetDHGroups}
 */
proto.msg.SystemGetDHGroups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetDHGroups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetDHGroups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetDHGroups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetDHGroups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetServerTime.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetServerTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetServerTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerTime.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetServerTime}
 */
proto.msg.SystemGetServerTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetServerTime;
  return proto.msg.SystemGetServerTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetServerTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetServerTime}
 */
proto.msg.SystemGetServerTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetServerTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetServerTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetServerTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetInfo}
 */
proto.msg.SystemGetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetInfo;
  return proto.msg.SystemGetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetInfo}
 */
proto.msg.SystemGetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetSalts.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetSalts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetSalts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetSalts.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetSalts}
 */
proto.msg.SystemGetSalts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetSalts;
  return proto.msg.SystemGetSalts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetSalts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetSalts}
 */
proto.msg.SystemGetSalts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetSalts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetSalts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetSalts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetSalts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetConfig}
 */
proto.msg.SystemGetConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetConfig;
  return proto.msg.SystemGetConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetConfig}
 */
proto.msg.SystemGetConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemUploadUsage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemUploadUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemUploadUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemUploadUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemUploadUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    usageList: jspb.Message.toObjectList(msg.getUsageList(),
    proto.msg.ClientUsage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemUploadUsage}
 */
proto.msg.SystemUploadUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemUploadUsage;
  return proto.msg.SystemUploadUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemUploadUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemUploadUsage}
 */
proto.msg.SystemUploadUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msg.ClientUsage;
      reader.readMessage(value,proto.msg.ClientUsage.deserializeBinaryFromReader);
      msg.addUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemUploadUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemUploadUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemUploadUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemUploadUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msg.ClientUsage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClientUsage Usage = 1;
 * @return {!Array<!proto.msg.ClientUsage>}
 */
proto.msg.SystemUploadUsage.prototype.getUsageList = function() {
  return /** @type{!Array<!proto.msg.ClientUsage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.ClientUsage, 1));
};


/**
 * @param {!Array<!proto.msg.ClientUsage>} value
 * @return {!proto.msg.SystemUploadUsage} returns this
*/
proto.msg.SystemUploadUsage.prototype.setUsageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.ClientUsage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.SystemUploadUsage.prototype.addUsage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.ClientUsage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemUploadUsage} returns this
 */
proto.msg.SystemUploadUsage.prototype.clearUsageList = function() {
  return this.setUsageList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemGetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetResponse}
 */
proto.msg.SystemGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetResponse;
  return proto.msg.SystemGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetResponse}
 */
proto.msg.SystemGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.addRequestids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestidsList();
  if (f.length > 0) {
    writer.writeRepeatedFixed64(
      1,
      f
    );
  }
};


/**
 * repeated fixed64 RequestIDs = 1;
 * @return {!Array<number>}
 */
proto.msg.SystemGetResponse.prototype.getRequestidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.setRequestidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.addRequestids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.clearRequestidsList = function() {
  return this.setRequestidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.ClientUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.ClientUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.ClientUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    year: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    month: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    day: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    userid: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    foregroundtime: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    avgresponsetime: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    totalrequests: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    receivedmessages: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    sentmessages: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    receivedmedia: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    sentmedia: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    uploadbytes: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    downloadbytes: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.ClientUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.ClientUsage;
  return proto.msg.ClientUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.ClientUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.ClientUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setForegroundtime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvgresponsetime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalrequests(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedmessages(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentmessages(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedmedia(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentmedia(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUploadbytes(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.ClientUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.ClientUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.ClientUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * required int32 Year = 1;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setYear = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearYear = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasYear = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 Month = 2;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setMonth = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearMonth = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasMonth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int32 Day = 3;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setDay = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearDay = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasDay = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int64 UserID = 4;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setUserid = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearUserid = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int64 ForegroundTime = 5;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getForegroundtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setForegroundtime = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearForegroundtime = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasForegroundtime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int64 AvgResponseTime = 6;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getAvgresponsetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setAvgresponsetime = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearAvgresponsetime = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasAvgresponsetime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int64 TotalRequests = 7;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getTotalrequests = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setTotalrequests = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearTotalrequests = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasTotalrequests = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 ReceivedMessages = 8;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getReceivedmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setReceivedmessages = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearReceivedmessages = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasReceivedmessages = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 SentMessages = 9;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getSentmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setSentmessages = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearSentmessages = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasSentmessages = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 ReceivedMedia = 10;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getReceivedmedia = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setReceivedmedia = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearReceivedmedia = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasReceivedmedia = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 SentMedia = 11;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getSentmedia = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setSentmedia = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearSentmedia = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasSentmedia = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 UploadBytes = 12;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getUploadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setUploadbytes = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearUploadbytes = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasUploadbytes = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 DownloadBytes = 13;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getDownloadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setDownloadbytes = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.clearDownloadbytes = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.ClientUsage.prototype.hasDownloadbytes = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemConfig.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    gifbot: (f = jspb.Message.getField(msg, 110)) == null ? undefined : f,
    wikibot: (f = jspb.Message.getField(msg, 111)) == null ? undefined : f,
    testmode: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    phonecallenabled: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    expireon: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    groupmaxsize: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    forwardedmaxcount: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    onlineupdateperiodinsec: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    edittimelimitinsec: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    revoketimelimitinsec: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    pinneddialogsmaxcount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    urlprefix: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    messagemaxlength: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    captionmaxlength: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    dcsList: jspb.Message.toObjectList(msg.getDcsList(),
    proto.msg.DataCenter.toObject, includeInstance),
    maxlabels: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    toppeerdecayrate: (f = jspb.Message.getOptionalFloatingPointField(msg, 15)) == null ? undefined : f,
    toppeermaxstep: (f = jspb.Message.getOptionalFloatingPointField(msg, 16)) == null ? undefined : f,
    maxactivesessions: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemConfig}
 */
proto.msg.SystemConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemConfig;
  return proto.msg.SystemConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemConfig}
 */
proto.msg.SystemConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 110:
      var value = /** @type {string} */ (reader.readString());
      msg.setGifbot(value);
      break;
    case 111:
      var value = /** @type {string} */ (reader.readString());
      msg.setWikibot(value);
      break;
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTestmode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPhonecallenabled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireon(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupmaxsize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setForwardedmaxcount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOnlineupdateperiodinsec(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEdittimelimitinsec(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRevoketimelimitinsec(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPinneddialogsmaxcount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUrlprefix(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessagemaxlength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaptionmaxlength(value);
      break;
    case 13:
      var value = new proto.msg.DataCenter;
      reader.readMessage(value,proto.msg.DataCenter.deserializeBinaryFromReader);
      msg.addDcs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxlabels(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToppeerdecayrate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToppeermaxstep(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxactivesessions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 110));
  if (f != null) {
    writer.writeString(
      110,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 111));
  if (f != null) {
    writer.writeString(
      111,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.msg.DataCenter.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
};


/**
 * optional string GifBot = 110;
 * @return {string}
 */
proto.msg.SystemConfig.prototype.getGifbot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 110, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setGifbot = function(value) {
  return jspb.Message.setField(this, 110, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearGifbot = function() {
  return jspb.Message.setField(this, 110, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasGifbot = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional string WikiBot = 111;
 * @return {string}
 */
proto.msg.SystemConfig.prototype.getWikibot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 111, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setWikibot = function(value) {
  return jspb.Message.setField(this, 111, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearWikibot = function() {
  return jspb.Message.setField(this, 111, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasWikibot = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * required bool TestMode = 1;
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.getTestmode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setTestmode = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearTestmode = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasTestmode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required bool PhoneCallEnabled = 2;
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.getPhonecallenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setPhonecallenabled = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearPhonecallenabled = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasPhonecallenabled = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 ExpireOn = 3;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getExpireon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setExpireon = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearExpireon = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasExpireon = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required int32 GroupMaxSize = 4;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getGroupmaxsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setGroupmaxsize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearGroupmaxsize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasGroupmaxsize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required int32 ForwardedMaxCount = 5;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getForwardedmaxcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setForwardedmaxcount = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearForwardedmaxcount = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasForwardedmaxcount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required int32 OnlineUpdatePeriodInSec = 6;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getOnlineupdateperiodinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setOnlineupdateperiodinsec = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearOnlineupdateperiodinsec = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasOnlineupdateperiodinsec = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int32 EditTimeLimitInSec = 7;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getEdittimelimitinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setEdittimelimitinsec = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearEdittimelimitinsec = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasEdittimelimitinsec = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required int32 RevokeTimeLimitInSec = 8;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getRevoketimelimitinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setRevoketimelimitinsec = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearRevoketimelimitinsec = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasRevoketimelimitinsec = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required int32 PinnedDialogsMaxCount = 9;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getPinneddialogsmaxcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setPinneddialogsmaxcount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearPinneddialogsmaxcount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasPinneddialogsmaxcount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * required int32 UrlPrefix = 10;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getUrlprefix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setUrlprefix = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearUrlprefix = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasUrlprefix = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * required int32 MessageMaxLength = 11;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMessagemaxlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMessagemaxlength = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearMessagemaxlength = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasMessagemaxlength = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * required int32 CaptionMaxLength = 12;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getCaptionmaxlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setCaptionmaxlength = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearCaptionmaxlength = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasCaptionmaxlength = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated DataCenter DCs = 13;
 * @return {!Array<!proto.msg.DataCenter>}
 */
proto.msg.SystemConfig.prototype.getDcsList = function() {
  return /** @type{!Array<!proto.msg.DataCenter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DataCenter, 13));
};


/**
 * @param {!Array<!proto.msg.DataCenter>} value
 * @return {!proto.msg.SystemConfig} returns this
*/
proto.msg.SystemConfig.prototype.setDcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.msg.DataCenter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DataCenter}
 */
proto.msg.SystemConfig.prototype.addDcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.msg.DataCenter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearDcsList = function() {
  return this.setDcsList([]);
};


/**
 * required int32 MaxLabels = 14;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxlabels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxlabels = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearMaxlabels = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasMaxlabels = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * required float TopPeerDecayRate = 15;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getToppeerdecayrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setToppeerdecayrate = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearToppeerdecayrate = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasToppeerdecayrate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * required float TopPeerMaxStep = 16;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getToppeermaxstep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setToppeermaxstep = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearToppeermaxstep = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasToppeermaxstep = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 MaxActiveSessions = 17;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxactivesessions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxactivesessions = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearMaxactivesessions = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.hasMaxactivesessions = function() {
  return jspb.Message.getField(this, 17) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DataCenter.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DataCenter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DataCenter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DataCenter.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    port: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    http: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
    websocket: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
    quic: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DataCenter}
 */
proto.msg.DataCenter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DataCenter;
  return proto.msg.DataCenter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DataCenter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DataCenter}
 */
proto.msg.DataCenter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHttp(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWebsocket(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DataCenter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DataCenter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DataCenter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DataCenter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * required string IP = 1;
 * @return {string}
 */
proto.msg.DataCenter.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setIp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.clearIp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.hasIp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required int32 Port = 2;
 * @return {number}
 */
proto.msg.DataCenter.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setPort = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.clearPort = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.hasPort = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required bool Http = 3;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getHttp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setHttp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.clearHttp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.hasHttp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required bool Websocket = 4;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getWebsocket = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setWebsocket = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.clearWebsocket = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.hasWebsocket = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required bool Quic = 5;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getQuic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setQuic = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.clearQuic = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.hasQuic = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemSalts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemSalts.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemSalts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemSalts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemSalts.toObject = function(includeInstance, msg) {
  var f, obj = {
    saltsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    startsfrom: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    duration: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemSalts}
 */
proto.msg.SystemSalts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemSalts;
  return proto.msg.SystemSalts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemSalts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemSalts}
 */
proto.msg.SystemSalts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.addSalts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartsfrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemSalts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemSalts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemSalts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemSalts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSaltsList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated int64 Salts = 1;
 * @return {!Array<number>}
 */
proto.msg.SystemSalts.prototype.getSaltsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setSaltsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.addSalts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.clearSaltsList = function() {
  return this.setSaltsList([]);
};


/**
 * required int64 StartsFrom = 2;
 * @return {number}
 */
proto.msg.SystemSalts.prototype.getStartsfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setStartsfrom = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.clearStartsfrom = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemSalts.prototype.hasStartsfrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required int64 Duration = 3;
 * @return {number}
 */
proto.msg.SystemSalts.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setDuration = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.clearDuration = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemSalts.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.AppUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.AppUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.AppUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.AppUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    available: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    mandatory: (f = jspb.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    identifier: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    versionname: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    downloadurl: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    description: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    displayinterval: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.AppUpdate}
 */
proto.msg.AppUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.AppUpdate;
  return proto.msg.AppUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.AppUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.AppUpdate}
 */
proto.msg.AppUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMandatory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayinterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.AppUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.AppUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.AppUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.AppUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * required bool Available = 1;
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setAvailable = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearAvailable = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasAvailable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required bool Mandatory = 2;
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.getMandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setMandatory = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearMandatory = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasMandatory = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string Identifier = 3;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setIdentifier = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearIdentifier = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required string VersionName = 4;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getVersionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setVersionname = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearVersionname = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasVersionname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required string DownloadUrl = 5;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getDownloadurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDownloadurl = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearDownloadurl = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasDownloadurl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required string Description = 6;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required int32 DisplayInterval = 7;
 * @return {number}
 */
proto.msg.AppUpdate.prototype.getDisplayinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDisplayinterval = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.clearDisplayinterval = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.hasDisplayinterval = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    workgroupname: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    bigphotourl: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    smallphotourl: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    storageurl: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemInfo}
 */
proto.msg.SystemInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemInfo;
  return proto.msg.SystemInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemInfo}
 */
proto.msg.SystemInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkgroupname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBigphotourl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmallphotourl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * required string WorkGroupName = 1;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getWorkgroupname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setWorkgroupname = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.clearWorkgroupname = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemInfo.prototype.hasWorkgroupname = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required string BigPhotoUrl = 2;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getBigphotourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setBigphotourl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.clearBigphotourl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemInfo.prototype.hasBigphotourl = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required string SmallPhotoUrl = 3;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getSmallphotourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setSmallphotourl = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.clearSmallphotourl = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemInfo.prototype.hasSmallphotourl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string StorageUrl = 4;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getStorageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setStorageurl = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.clearStorageurl = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemInfo.prototype.hasStorageurl = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemServerTime.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemServerTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemServerTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemServerTime.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemServerTime}
 */
proto.msg.SystemServerTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemServerTime;
  return proto.msg.SystemServerTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemServerTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemServerTime}
 */
proto.msg.SystemServerTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemServerTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemServerTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemServerTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemServerTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * required int64 Timestamp = 1;
 * @return {number}
 */
proto.msg.SystemServerTime.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemServerTime} returns this
 */
proto.msg.SystemServerTime.prototype.setTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.msg.SystemServerTime} returns this
 */
proto.msg.SystemServerTime.prototype.clearTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.SystemServerTime.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemPublicKeys.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemPublicKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemPublicKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemPublicKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemPublicKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    rsapublickeysList: jspb.Message.toObjectList(msg.getRsapublickeysList(),
    core_types_pb.RSAPublicKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemPublicKeys}
 */
proto.msg.SystemPublicKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemPublicKeys;
  return proto.msg.SystemPublicKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemPublicKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemPublicKeys}
 */
proto.msg.SystemPublicKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.RSAPublicKey;
      reader.readMessage(value,core_types_pb.RSAPublicKey.deserializeBinaryFromReader);
      msg.addRsapublickeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemPublicKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemPublicKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemPublicKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemPublicKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRsapublickeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.RSAPublicKey.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RSAPublicKey RSAPublicKeys = 1;
 * @return {!Array<!proto.msg.RSAPublicKey>}
 */
proto.msg.SystemPublicKeys.prototype.getRsapublickeysList = function() {
  return /** @type{!Array<!proto.msg.RSAPublicKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.RSAPublicKey, 1));
};


/**
 * @param {!Array<!proto.msg.RSAPublicKey>} value
 * @return {!proto.msg.SystemPublicKeys} returns this
*/
proto.msg.SystemPublicKeys.prototype.setRsapublickeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.RSAPublicKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.RSAPublicKey}
 */
proto.msg.SystemPublicKeys.prototype.addRsapublickeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.RSAPublicKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemPublicKeys} returns this
 */
proto.msg.SystemPublicKeys.prototype.clearRsapublickeysList = function() {
  return this.setRsapublickeysList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemDHGroups.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemDHGroups.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemDHGroups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemDHGroups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemDHGroups.toObject = function(includeInstance, msg) {
  var f, obj = {
    dhgroupsList: jspb.Message.toObjectList(msg.getDhgroupsList(),
    core_types_pb.DHGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemDHGroups}
 */
proto.msg.SystemDHGroups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemDHGroups;
  return proto.msg.SystemDHGroups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemDHGroups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemDHGroups}
 */
proto.msg.SystemDHGroups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.DHGroup;
      reader.readMessage(value,core_types_pb.DHGroup.deserializeBinaryFromReader);
      msg.addDhgroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemDHGroups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemDHGroups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemDHGroups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemDHGroups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDhgroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.DHGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DHGroup DHGroups = 1;
 * @return {!Array<!proto.msg.DHGroup>}
 */
proto.msg.SystemDHGroups.prototype.getDhgroupsList = function() {
  return /** @type{!Array<!proto.msg.DHGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.DHGroup, 1));
};


/**
 * @param {!Array<!proto.msg.DHGroup>} value
 * @return {!proto.msg.SystemDHGroups} returns this
*/
proto.msg.SystemDHGroups.prototype.setDhgroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.DHGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DHGroup}
 */
proto.msg.SystemDHGroups.prototype.addDhgroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.DHGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemDHGroups} returns this
 */
proto.msg.SystemDHGroups.prototype.clearDhgroupsList = function() {
  return this.setDhgroupsList([]);
};


goog.object.extend(exports, proto.msg);

/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var chat_core_types_pb = require('./chat.core.types_pb.js');
var chat_core_message_medias_pb = require('./chat.core.message.medias_pb.js');
goog.exportSymbol('proto.msg.MusicsAdd', null, global);
goog.exportSymbol('proto.msg.MusicsFollow', null, global);
goog.exportSymbol('proto.msg.MusicsGet', null, global);
goog.exportSymbol('proto.msg.MusicsRemove', null, global);
goog.exportSymbol('proto.msg.MusicsSetStatus', null, global);
goog.exportSymbol('proto.msg.MusicsUnFollow', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsGet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsGet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsGet.displayName = 'proto.msg.MusicsGet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsGet.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsGet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsGet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsGet.toObject = function(includeInstance, msg) {
  var f, obj = {
    playlistid: jspb.Message.getField(msg, 1),
    index: jspb.Message.getField(msg, 2),
    file: (f = msg.getFile()) && chat_core_types_pb.FileLocation.toObject(includeInstance, f),
    attribute: (f = msg.getAttribute()) && chat_core_message_medias_pb.DocumentAttributeAudio.toObject(includeInstance, f),
    thumbnail: (f = msg.getThumbnail()) && chat_core_types_pb.FileLocation.toObject(includeInstance, f),
    md5checksum: jspb.Message.getField(msg, 10)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsGet}
 */
proto.msg.MusicsGet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsGet;
  return proto.msg.MusicsGet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsGet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsGet}
 */
proto.msg.MusicsGet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaylistid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 3:
      var value = new chat_core_types_pb.FileLocation;
      reader.readMessage(value,chat_core_types_pb.FileLocation.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 4:
      var value = new chat_core_message_medias_pb.DocumentAttributeAudio;
      reader.readMessage(value,chat_core_message_medias_pb.DocumentAttributeAudio.deserializeBinaryFromReader);
      msg.setAttribute(value);
      break;
    case 9:
      var value = new chat_core_types_pb.FileLocation;
      reader.readMessage(value,chat_core_types_pb.FileLocation.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5checksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsGet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsGet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsGet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsGet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      chat_core_types_pb.FileLocation.serializeBinaryToWriter
    );
  }
  f = message.getAttribute();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      chat_core_message_medias_pb.DocumentAttributeAudio.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      chat_core_types_pb.FileLocation.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional int32 PlaylistID = 1;
 * @return {number}
 */
proto.msg.MusicsGet.prototype.getPlaylistid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msg.MusicsGet.prototype.setPlaylistid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.msg.MusicsGet.prototype.clearPlaylistid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasPlaylistid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 Index = 2;
 * @return {number}
 */
proto.msg.MusicsGet.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.msg.MusicsGet.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.msg.MusicsGet.prototype.clearIndex = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FileLocation File = 3;
 * @return {?proto.msg.FileLocation}
 */
proto.msg.MusicsGet.prototype.getFile = function() {
  return /** @type{?proto.msg.FileLocation} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.FileLocation, 3));
};


/** @param {?proto.msg.FileLocation|undefined} value */
proto.msg.MusicsGet.prototype.setFile = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.msg.MusicsGet.prototype.clearFile = function() {
  this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasFile = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DocumentAttributeAudio Attribute = 4;
 * @return {?proto.msg.DocumentAttributeAudio}
 */
proto.msg.MusicsGet.prototype.getAttribute = function() {
  return /** @type{?proto.msg.DocumentAttributeAudio} */ (
    jspb.Message.getWrapperField(this, chat_core_message_medias_pb.DocumentAttributeAudio, 4));
};


/** @param {?proto.msg.DocumentAttributeAudio|undefined} value */
proto.msg.MusicsGet.prototype.setAttribute = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.msg.MusicsGet.prototype.clearAttribute = function() {
  this.setAttribute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasAttribute = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FileLocation Thumbnail = 9;
 * @return {?proto.msg.FileLocation}
 */
proto.msg.MusicsGet.prototype.getThumbnail = function() {
  return /** @type{?proto.msg.FileLocation} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.FileLocation, 9));
};


/** @param {?proto.msg.FileLocation|undefined} value */
proto.msg.MusicsGet.prototype.setThumbnail = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.msg.MusicsGet.prototype.clearThumbnail = function() {
  this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string MD5Checksum = 10;
 * @return {string}
 */
proto.msg.MusicsGet.prototype.getMd5checksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.msg.MusicsGet.prototype.setMd5checksum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.msg.MusicsGet.prototype.clearMd5checksum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsGet.prototype.hasMd5checksum = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsAdd = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsAdd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsAdd.displayName = 'proto.msg.MusicsAdd';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsAdd.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsAdd.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsAdd} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsAdd.toObject = function(includeInstance, msg) {
  var f, obj = {
    playlistid: jspb.Message.getField(msg, 1),
    index: jspb.Message.getField(msg, 2),
    file: (f = msg.getFile()) && chat_core_types_pb.InputFileLocation.toObject(includeInstance, f),
    thumbnail: (f = msg.getThumbnail()) && chat_core_types_pb.InputFileLocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsAdd}
 */
proto.msg.MusicsAdd.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsAdd;
  return proto.msg.MusicsAdd.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsAdd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsAdd}
 */
proto.msg.MusicsAdd.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlaylistid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 3:
      var value = new chat_core_types_pb.InputFileLocation;
      reader.readMessage(value,chat_core_types_pb.InputFileLocation.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 4:
      var value = new chat_core_types_pb.InputFileLocation;
      reader.readMessage(value,chat_core_types_pb.InputFileLocation.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsAdd.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsAdd.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsAdd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsAdd.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      chat_core_types_pb.InputFileLocation.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      chat_core_types_pb.InputFileLocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 PlaylistID = 1;
 * @return {number}
 */
proto.msg.MusicsAdd.prototype.getPlaylistid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.msg.MusicsAdd.prototype.setPlaylistid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.msg.MusicsAdd.prototype.clearPlaylistid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsAdd.prototype.hasPlaylistid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 Index = 2;
 * @return {number}
 */
proto.msg.MusicsAdd.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.msg.MusicsAdd.prototype.setIndex = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.msg.MusicsAdd.prototype.clearIndex = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsAdd.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * required InputFileLocation File = 3;
 * @return {!proto.msg.InputFileLocation}
 */
proto.msg.MusicsAdd.prototype.getFile = function() {
  return /** @type{!proto.msg.InputFileLocation} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputFileLocation, 3, 1));
};


/** @param {!proto.msg.InputFileLocation} value */
proto.msg.MusicsAdd.prototype.setFile = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.msg.MusicsAdd.prototype.clearFile = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsAdd.prototype.hasFile = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional InputFileLocation Thumbnail = 4;
 * @return {?proto.msg.InputFileLocation}
 */
proto.msg.MusicsAdd.prototype.getThumbnail = function() {
  return /** @type{?proto.msg.InputFileLocation} */ (
    jspb.Message.getWrapperField(this, chat_core_types_pb.InputFileLocation, 4));
};


/** @param {?proto.msg.InputFileLocation|undefined} value */
proto.msg.MusicsAdd.prototype.setThumbnail = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.msg.MusicsAdd.prototype.clearThumbnail = function() {
  this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.msg.MusicsAdd.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsRemove = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsRemove, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsRemove.displayName = 'proto.msg.MusicsRemove';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsRemove.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsRemove.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsRemove} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsRemove.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsRemove}
 */
proto.msg.MusicsRemove.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsRemove;
  return proto.msg.MusicsRemove.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsRemove} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsRemove}
 */
proto.msg.MusicsRemove.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsRemove.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsRemove.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsRemove} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsRemove.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsSetStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsSetStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsSetStatus.displayName = 'proto.msg.MusicsSetStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsSetStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsSetStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsSetStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsSetStatus.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsSetStatus}
 */
proto.msg.MusicsSetStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsSetStatus;
  return proto.msg.MusicsSetStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsSetStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsSetStatus}
 */
proto.msg.MusicsSetStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsSetStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsSetStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsSetStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsSetStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsFollow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsFollow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsFollow.displayName = 'proto.msg.MusicsFollow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsFollow.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsFollow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsFollow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsFollow.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsFollow}
 */
proto.msg.MusicsFollow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsFollow;
  return proto.msg.MusicsFollow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsFollow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsFollow}
 */
proto.msg.MusicsFollow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsFollow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsFollow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsFollow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsFollow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MusicsUnFollow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MusicsUnFollow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.msg.MusicsUnFollow.displayName = 'proto.msg.MusicsUnFollow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MusicsUnFollow.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MusicsUnFollow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MusicsUnFollow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsUnFollow.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MusicsUnFollow}
 */
proto.msg.MusicsUnFollow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MusicsUnFollow;
  return proto.msg.MusicsUnFollow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MusicsUnFollow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MusicsUnFollow}
 */
proto.msg.MusicsUnFollow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MusicsUnFollow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MusicsUnFollow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MusicsUnFollow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MusicsUnFollow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.msg);

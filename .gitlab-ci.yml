stages:
  - build
  - deploy

variables:
  BUILD_DIR: $CI_PROJECT_DIR

image: "node:14"

build:app:
  stage: build
  only:
    - master
    - feature/call
    - feature/remote_shared_media
  script:
    - cp -a ./. /var/lib/app
    - cd /var/lib/app
    - yarn
    - yarn run build
    - mkdir -p $BUILD_DIR/app
    - cp -r ./build/* $BUILD_DIR/app
    - cp ./nginx.conf.template $BUILD_DIR/app/
    - cp ./nginx-ssl.conf.template $BUILD_DIR/app/

  artifacts:
    untracked: true
    expire_in: 1 hour

deploy:production:
  image: gitlab/dind
  stage: deploy
  only:
    - master
  services:
    - docker:dind
  variables:
    IMAGE_TAG: "4.0"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  dependencies:
    - build:app

deploy:staging:
  image: gitlab/dind
  stage: deploy
  only:
    - feature/call
  services:
    - docker:dind
  variables:
    IMAGE_TAG: "4.call"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  dependencies:
    - build:app

deploy:dev:
  image: gitlab/dind
  stage: deploy
  only:
    - feature/remote_shared_media
  services:
    - docker:dind
  variables:
    IMAGE_TAG: "4.dev"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  dependencies:
    - build:app
